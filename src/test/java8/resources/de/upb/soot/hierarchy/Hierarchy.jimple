public class Hierarchy extends A
{

    public void <init>()
    {
        Hierarchy r0;

        r0 := @this: Hierarchy;

        specialinvoke r0.<A: void <init>()>();

        return;
    }

    public static void hierarchy(java.lang.String[])
    {
        java.lang.String[] r0;
        Hierarchy $r2;
        java.io.PrintStream $r3;
        java.lang.String $r4;

        r0 := @parameter0: java.lang.String[];

        $r2 = new Hierarchy;

        specialinvoke $r2.<Hierarchy: void <init>()>();

        virtualinvoke $r2.<Hierarchy: void methodB()>();

        $r3 = <java.lang.System: java.io.PrintStream out>;

        $r4 = virtualinvoke $r2.<Hierarchy: java.lang.String methodA()>();

        virtualinvoke $r3.<java.io.PrintStream: void println(java.lang.String)>($r4);

        return;
    }

    public volatile int method_intA()
    {
        Hierarchy r0;
        int $i0;

        r0 := @this: Hierarchy;

        $i0 = specialinvoke r0.<A: int method_intA()>();

        return $i0;
    }

    public volatile java.lang.String methodA()
    {
        Hierarchy r0;
        java.lang.String $r1;

        r0 := @this: Hierarchy;

        $r1 = specialinvoke r0.<A: java.lang.String methodA()>();

        return $r1;
    }

    public volatile void methodB()
    {
        Hierarchy r0;

        r0 := @this: Hierarchy;

        specialinvoke r0.<A: void methodB()>();

        return;
    }

    public volatile int methodC()
    {
        Hierarchy r0;
        int $i0;

        r0 := @this: Hierarchy;

        $i0 = specialinvoke r0.<A: int methodC()>();

        return $i0;
    }
}
